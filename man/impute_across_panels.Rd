% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_panel_merging.R
\name{impute_across_panels}
\alias{impute_across_panels}
\title{Impute non-overlapping channels for whole data sets}
\usage{
impute_across_panels(
  dataset1,
  dataset2,
  overlap_channels,
  impute_channels1,
  impute_channels2,
  xdim = 8,
  ydim = 8,
  seed = 482
)
}
\arguments{
\item{dataset1}{Dataframe with expression values 1}

\item{dataset2}{Dataframe with expression values 2}

\item{overlap_channels}{Channels (markers) that overlap between impute_for and complete_obs, which can be used to base imputation on}

\item{impute_channels1}{Channels to impute and add to the impute_for dataset1 (must be present in dataset2)}

\item{impute_channels2}{Channels to impute and add to the impute_for dataset2 (must be present in dataset1)}

\item{xdim}{The x-dimension size of the SOM.}

\item{ydim}{The y-dimension size of the SOM.}

\item{seed}{The seed to use when creating the SOM.}
}
\description{
This function imputes the expression values for a whole dataset based on the overlapping markers contained in another dataset.
The purpose is to be able to merge multi-panel data or to merge differently run datasets that have non-overlapping markers
}
\examples{
\dontrun{
dfs_imputed <- impute_across_panels(dataset1 = df_panel1, dataset2 = df_panel2,
 overlap_channels = intersect(df_panel1_markers, df_panel2_markers),
 impute_channels1 = unique_df_panel2_markers, , impute_channels2 = unique_df_panel1_markers)
}
}
\seealso{
Other merging: 
\code{\link{salvage_problematic}()}
}
\concept{merging}
